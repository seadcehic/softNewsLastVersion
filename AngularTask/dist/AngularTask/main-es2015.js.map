{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Test/Test.component.ts","./src/app/Test/Test.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/news-detail/news-detail.component.ts","./src/app/news-detail/news-detail.component.html","./src/app/news-list/news-list.component.ts","./src/app/news-list/news-list.component.html","./src/app/news/news.component.ts","./src/app/news/news.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/routes.ts","./src/app/services/Test.service.ts","./src/app/services/alertify.service.ts","./src/app/services/auth.service.ts","./src/app/services/category.service.ts","./src/app/services/error.interceptor.ts","./src/app/services/news.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { TestService } from 'src/app/services/Test.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Test } from 'src/shared/Test';\n\n@Component({\n  selector: 'app-Test',\n  templateUrl: './Test.component.html',\n  styleUrls: []\n})\nexport class TestComponent implements OnInit {\n\n  constructor(public service: TestService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.service.refreshList();\n  }\n\n  resetForm(form?: NgForm){\n    if (this.service.formData.Id != null){\n      form.resetForm();\n    }\n    this.service.formData = {\n        Id: 0,\n        Name: ''\n      };\n  }\n\n  onSubmit(form: NgForm){\n    if (this.service.formData.Id === 0){\n      this.insertRecord(form);\n    }\n    else{\n      this.updateForm(form);\n    }\n  }\n  insertRecord(form: NgForm){\n    this.service.postTest().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.success('Test added', 'Test head');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  updateForm(form: NgForm){\n    this.service.putTest().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.success('Test update', 'Test head');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  onDelete(id){\n    if (confirm('Are you sure to delete this record?')){\n      this.service.deleteTest(id)\n      .subscribe(res => {\n        this.service.refreshList();\n        this.toastr.warning('Deleted item', 'Header');\n      });\n    }\n  }\n  populateForm(item: Test){\nthis.service.formData = Object.assign({}, item);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-9\">\n    <form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n      <input type=\"hidden\" name=\"Id\" [(ngModel)]=\"service.formData.Id\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-5\">\n          <input  class=\"form-control\" name=\"Name\" #Name=\"ngModel\" [(ngModel)]=\"service.formData.Name\" \n          required maxlength=\"10\" placeholder=\"Test placeholder\">\n        </div>\n        <div class=\"form-group col-md-5\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div class=\"col-md-5\">\n    <br><br>\n    <table class=\"table table-hover\">\n      <tr *ngFor=\"let item of service.list\">\n        <td (click)=\"populateForm(item)\">{{item.Name}}</td>\n        <td (click)=\"onDelete(item.Id)\">Delete</td>\n      </tr>\n    </table>\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\nexport class AppComponent implements OnInit{\njwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n    const token = localStorage.getItem('token');\n    if (token){\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestService } from 'src/app/services/Test.service';\nimport {  FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { TestComponent } from './Test/Test.component';\nimport { NewsComponent } from './news/news.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      TestComponent,\n      NavComponent,\n      RegisterComponent,\n      HomeComponent,\n      NewsDetailComponent,\n      NewsListComponent,\n      NewsComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      HttpClientModule,\n      ToastrModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes)\n   ],\n   providers: [\n      TestService,\n      AuthService,\n      ErrorInterceptorProvider\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService){ }\n  canActivate(): boolean {\n    if (this.authService.loggedIn()){\n      return true;\n    }\n    this.alertify.error('You shall not pass!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Sign up</h1>\n    <p class=\"lead\">It’s quick and easy.</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg\" (click)=\"registerToggle()\">Register</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(\n    public  authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      (res) => {\n        this.alertify.success('Logged in successfully.');\n      },\n      (err) => {\n        this.alertify.error(err);\n      },\n      () => {\n        this.router.navigate(['/news']);\n      }\n    );\n  }\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    this.alertify.message('Logged out');\n    this.router.navigate(['/home']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\" >Angular</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/test']\"  >Test</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Test 2 </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\"\n          >Test 3</a\n        >\n      </li>\n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n        Welcome {{ authService.decodedToken?.unique_name | titlecase }}\n      </a>\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" href=\"#\" (click)=\"logOut()\"\n          ><i class=\"fa fa-sign-out\"></i>Logout</a\n        >\n      </div>\n    </div>\n\n    <form\n      *ngIf=\"!loggedIn()\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline my-2 my-lg-0\"\n      (ngSubmit)=\"login()\"\n    >\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"Username\"\n        required\n        [(ngModel)]=\"model.username\"\n      />\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n      />\n      <button\n        [disabled]=\"loginForm.invalid\"\n        class=\"btn btn-success my-2 my-sm-0\"\n        type=\"submit\"\n      >\n        Login\n      </button>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\nlistofCategories: any[];\nselectedValue: any;\n\n  constructor(public newsService: NewsService,\n    private categoryService: CategoryService,\n     private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.getCategories();\n  }\n  SubmitNews(form: NgForm) {\n    console.log(this.selectedValue);\n    this.newsService.newsData.CategoryId = +this.selectedValue;\n    if (this.newsService.newsData.Id === 0) {\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n  }\n\n  insertRecord(form: NgForm) {\n    this.newsService.postNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success(\n          'Submitted successfully'\n        );\n        this.newsService.refreshList();\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n  updateRecord(form: NgForm) {\n    this.newsService.putNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success(\n          'Submitted successfully'\n        );\n        this.newsService.refreshList();\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.newsService.newsData = {\n      Id: 0,\n      Name: '',\n      Description: '',\n      CategoryId: 0,\n    };\n  }\n  getCategories(){\n    this.categoryService.getAll().toPromise().then(res => this.listofCategories = res as Category[]);\n  }\n}\n","<form #newsForm=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"SubmitNews(newsForm)\" >\n  <div class=\"container-form col-md-10\">\n  <input type=\"hidden\" name=\"Id\" [value]=\"newsService.newsData.Id\">\n  <div class=\"form-group\">\n      <div class=\"input-group\">\n          <input id=\"Name\" name=\"Name\" #Name=\"ngModel\" \n          [(ngModel)]=\"newsService.newsData.Name\" required class=\"form-control\" placeholder=\"Name\">\n      </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n        <input id=\"Description\" name=\"Description\" #Description=\"ngModel\" \n        [(ngModel)]=\"newsService.newsData.Description\" required class=\"form-control\" placeholder=\"Description\">\n    </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"input-group\">\n    <select name=\"Categories\" [(ngModel)]=\"selectedValue\">\n      <option *ngFor=\"let item of listofCategories\" [value]=\"item.Id\">{{item.Name}}</option>\n    </select>  </div>\n</div>\n  <div class=\"form-group\">\n  <button class=\"btn btn-success btn-lg btn-block\" [disabled]=\"newsForm.invalid\" type=\"submit\"><i class=\"fas fa-database\"></i> Submit</button>\n  </div>\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { News } from '../models/news';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.css']\n})\nexport class NewsListComponent implements OnInit {\n  searchQuery: string;\n  constructor(public newsService: NewsService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.newsService.refreshList(this.searchQuery);\n  }\n\n  populateForm(item: News) {\n    this.newsService.newsData = Object.assign({}, item);\n  }\n  onDelete(Id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.newsService.deleteNews(Id).subscribe(\n        (res) => {\n          this.alertify.warning(\n            'Deleted successfully'\n          );\n          this.newsService.refreshList(this.searchQuery);\n        },\n        (err) => {\n         this.alertify.error(err);\n        }\n      );\n    }\n  }\n  searchMethod(){\nthis.newsService.refreshList(this.searchQuery);\n  }\n}\n","<form (ngSubmit)=\"searchMethod()\" #searchForm=\"ngForm\">\n  <div class=\"form-row\">\n  <div class=\"form-group col-md-8\">\n    <input class=\"form-control\" type=\"text\"  name=\"searchQuery\"\n    [(ngModel)]=\"searchQuery\" placeholder=\"Search\">\n  </div>\n  <div class=\"form-group\">\n    <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\"><i class=\"fas fa-database\"></i> Search</button>\n    </div>\n  </div>\n</form>\n<table class=\"table table-hover\">\n  <tr *ngFor=\"let item of newsService.listOfNews\">\n    <td (click)=\"populateForm(item)\">{{ item.Name }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Category }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Description }}</td>\n    <td >\n      <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete(item.Id)\"></i>\n    </td>\n  </tr>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\n  <h1 class=\"display-4 text-center\">\n      News Detail Register\n  </h1>\n  <hr>\n  <div class=\"row\">\n      <div class=\"col-md-5\">\n          <app-news-detail></app-news-detail>\n      </div>\n      <div class=\"col-md-7\">\n          <app-news-list></app-news-list>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n@Output() cancelRegister = new EventEmitter();\nmodel: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  register(){\n   this.authService.register(this.model).subscribe(() => {\n     this.alertify.success('successfully registration');\n   },\n   err => {\n     this.alertify.error(err);\n   });\n  }\n  cancel(){\n    this.cancelRegister.emit(false);\n  }\n}\n","<form #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"firstName\" [(ngModel)]=\"model.firstName\" placeholder=\"First Name\">\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"lastName\" [(ngModel)]=\"model.lastName\" placeholder=\"Last Name\">\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\">\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\">\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\" >Cancel</button>\n  </div>\n  \n</form>","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\r\nimport { NewsListComponent } from './news-list/news-list.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { TestComponent } from './Test/Test.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'test', component: TestComponent, canActivate: [AuthGuard]},\r\n            {path: 'news-details', component: NewsDetailComponent, canActivate: [AuthGuard]},\r\n            {path: 'news-list', component: NewsListComponent, canActivate: [AuthGuard]},\r\n            {path: 'news', component: NewsComponent, canActivate: [AuthGuard]}\r\n\r\n\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];","import { Injectable } from '@angular/core';\nimport { Test } from '../../shared/Test';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TestService {\n  formData: Test = {} as Test;\n  list: Test[];\n\n  constructor(private http: HttpClient) {}\n\n  postTest() {\n    return this.http.post('http://localhost:61364/api/' + 'Test', this.formData);\n  }\n  putTest() {\n    return this.http.put('http://localhost:61364/api/' + 'Test/' + this.formData.Id, this.formData);\n  }\n  deleteTest(id: number) {\n    return this.http.delete('http://localhost:61364/api/' + 'Test/' + id);\n  }\n  refreshList(){\n    return this.http.get('http://localhost:61364/api/' + 'Test')\n    .toPromise()\n    .then(res =>  this.list = res as Test[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n    });\n  }\n  success(message: string) {\n    alertify.success(message);\n  }\n  error(message: string) {\n    alertify.error(message);\n  }\n  warning(message: string) {\n    alertify.warning(message);\n  }\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post('http://localhost:61364/api/auth/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          console.log(this.decodedToken);\n        }\n      })\n    );\n  }\n  register(model: any){\n    return this.http.post('http://localhost:61364/api/auth/register', model);\n  }\n\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\nconstructor(private http: HttpClient) { }\n\ngetAll(){\n  return this.http.get('http://localhost:61364/api/category');\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport {  throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError (error => {\r\n                if (error.status === 401){\r\n                    return throwError(error.statusText);\r\n                }\r\n\r\n                if (error instanceof HttpErrorResponse){\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if(applicationError){\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n\r\n                    if (serverError.errors && typeof serverError.errors === 'object'){\r\n                        for (const key in serverError.errors){\r\n                            if (serverError.errors[key]){\r\n                                modalStateErrors += serverError.errors[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n        })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { News } from '../models/news';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\nnewsData: News = {} as News;\nlistOfNews: News[];\n\nconstructor(private http: HttpClient) { }\n\npostNews() {\n  return this.http.post('http://localhost:61364/api/' + 'News', this.newsData);\n}\nputNews() {\n  return this.http.put('http://localhost:61364/api/' + 'News/' + this.newsData.Id, this.newsData);\n}\ndeleteNews(id: number) {\n  return this.http.delete('http://localhost:61364/api/' + 'News/' + id);\n}\nrefreshList(searchQuery?: string){\n  return this.http.get('http://localhost:61364/api/' + 'News/' + searchQuery)\n  .toPromise()\n  .then(res =>  this.listOfNews = res as News[]);\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}