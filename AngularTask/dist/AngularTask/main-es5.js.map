{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Test/Test.component.ts","webpack:///src/app/Test/Test.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/news-detail/news-detail.component.ts","webpack:///src/app/news-detail/news-detail.component.html","webpack:///src/app/news-list/news-list.component.ts","webpack:///src/app/news-list/news-list.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/routes.ts","webpack:///src/app/services/Test.service.ts","webpack:///src/app/services/alertify.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/error.interceptor.ts","webpack:///src/app/services/news.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","TestComponent","service","toastr","resetForm","refreshList","form","formData","Id","Name","insertRecord","updateForm","postTest","subscribe","res","success","err","console","log","putTest","confirm","deleteTest","warning","item","Object","assign","onSubmit","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","authService","jwtHelper","token","localStorage","getItem","decodedToken","decodeToken","AppModule","declarations","providers","bootstrap","AuthGuard","router","alertify","loggedIn","error","navigate","providedIn","HomeComponent","registerMode","NavComponent","model","login","removeItem","message","NewsDetailComponent","newsService","categoryService","getCategories","selectedValue","newsData","CategoryId","updateRecord","postNews","putNews","Description","getAll","toPromise","listofCategories","SubmitNews","NewsListComponent","searchQuery","deleteNews","searchMethod","NewsComponent","RegisterComponent","cancelRegister","register","emit","cancel","appRoutes","path","component","runGuardsAndResolvers","canActivate","children","redirectTo","pathMatch","TestService","http","post","put","get","list","AlertifyService","okCallBack","AuthService","pipe","response","user","setItem","isTokenExpired","CategoryService","ErrorInterceptor","next","handle","status","statusText","applicationError","headers","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","NewsService","listOfNews","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmBM;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAa;;AAC9C;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACxC;;;;;;AAFmC;;AAAA;;;;QDT5BC,a;AAEX,6BAAmBC,OAAnB,EAAiDC,MAAjD,EAAwE;AAAA;;AAArD,aAAAD,OAAA,GAAAA,OAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAA0B;;;;mCAEhE;AACT,eAAKC,SAAL;AACA,eAAKF,OAAL,CAAaG,WAAb;AACD;;;kCAESC,I,EAAa;AACrB,cAAI,KAAKJ,OAAL,CAAaK,QAAb,CAAsBC,EAAtB,IAA4B,IAAhC,EAAqC;AACnCF,gBAAI,CAACF,SAAL;AACD;;AACD,eAAKF,OAAL,CAAaK,QAAb,GAAwB;AACpBC,cAAE,EAAE,CADgB;AAEpBC,gBAAI,EAAE;AAFc,WAAxB;AAID;;;iCAEQH,I,EAAY;AACnB,cAAI,KAAKJ,OAAL,CAAaK,QAAb,CAAsBC,EAAtB,KAA6B,CAAjC,EAAmC;AACjC,iBAAKE,YAAL,CAAkBJ,IAAlB;AACD,WAFD,MAGI;AACF,iBAAKK,UAAL,CAAgBL,IAAhB;AACD;AACF;;;qCACYA,I,EAAY;AAAA;;AACvB,eAAKJ,OAAL,CAAaU,QAAb,GAAwBC,SAAxB,CACE,UAAAC,GAAG,EAAI;AACL,iBAAI,CAACV,SAAL,CAAeE,IAAf;;AACA,iBAAI,CAACH,MAAL,CAAYY,OAAZ,CAAoB,YAApB,EAAkC,WAAlC;;AACA,iBAAI,CAACb,OAAL,CAAaG,WAAb;AACD,WALH,EAME,UAAAW,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WARH;AAUD;;;mCACUV,I,EAAY;AAAA;;AACrB,eAAKJ,OAAL,CAAaiB,OAAb,GAAuBN,SAAvB,CACE,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACV,SAAL,CAAeE,IAAf;;AACA,kBAAI,CAACH,MAAL,CAAYY,OAAZ,CAAoB,aAApB,EAAmC,WAAnC;;AACA,kBAAI,CAACb,OAAL,CAAaG,WAAb;AACD,WALH,EAME,UAAAW,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WARH;AAUD;;;iCACQhB,E,EAAE;AAAA;;AACT,cAAIoB,OAAO,CAAC,qCAAD,CAAX,EAAmD;AACjD,iBAAKlB,OAAL,CAAamB,UAAb,CAAwBrB,EAAxB,EACCa,SADD,CACW,UAAAC,GAAG,EAAI;AAChB,oBAAI,CAACZ,OAAL,CAAaG,WAAb;;AACA,oBAAI,CAACF,MAAL,CAAYmB,OAAZ,CAAoB,cAApB,EAAoC,QAApC;AACD,aAJD;AAKD;AACF;;;qCACYC,I,EAAU;AACzB,eAAKrB,OAAL,CAAaK,QAAb,GAAwBiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,CAAxB;AACG;;;;;;;uBA9DUtB,a,EAAa,0I,EAAA,yH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,sgB;AAAA;AAAA;;;ACX1B;;AACE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAAyB,QAAA,KAAV;AAAwB,WAAxB;;AACtC;;AAA+B;AAAA;AAAA;;AAA/B;;AACA;;AACE;;AACE;;AAAyD;AAAA;AAAA;;AAAzD;;AAEF;;AACA;;AACE;;AAAwE;;AAAM;;AAChF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;AACJ;;AACE;;AAIF;;AACF;;AAEF;;;;;;AAvBqC;;AAAA;;AAG8B;;AAAA;;AAIX;;AAAA;;AAS9C;;AAAA;;;;;;;;;sEDRGzB,a,EAAa;cALzB,uDAKyB;eALf;AACT0B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAER/B,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASamC,Y;AAGX,4BAAoBC,WAApB,EAA4C;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AAFtB,aAAAC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAEiD;;;;mCAEvC;AACN,cAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,cAAIF,KAAJ,EAAU;AACR,iBAAKF,WAAL,CAAiBK,YAAjB,GAAgC,KAAKJ,SAAL,CAAeK,WAAf,CAA2BJ,KAA3B,CAAhC;AACD;AACF;;;;;;;uBAVUH,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACTzB;;AACA;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTP,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqDaa,S;;;;;YAAAA,S;AAAS,kBAHhB,2DAGgB;;;;yBAATA,S;AAAS,O;AAAA,iBATR,CACR,yEADQ,EAER,mEAFQ,EAGR,qFAHQ,C;AAIV,gBAdQ,CACN,uEADM,EAEN,oEAFM,EAGN,0DAHM,EAIN,qEAJM,EAKN,wDAAaV,OAAb,EALM,EAMN,4FANM,EAON,yEAAiBA,OAAjB,EAPM,EAQN,8DAAaA,OAAb,CAAqB,kDAArB,CARM,CAcR;;;;0HAKSU,S,EAAS;AAAA,uBA5BhB,2DA4BgB,EA3BhB,mEA2BgB,EA1BhB,+DA0BgB,EAzBhB,+EAyBgB,EAxBhB,mEAwBgB,EAvBhB,uFAuBgB,EAtBhB,iFAsBgB,EArBhB,mEAqBgB;AArBH,kBAGb,uEAHa,EAIb,oEAJa,EAKb,0DALa,EAMb,qEANa,EAMG,uDANH,EAQb,4FARa,EAQU,wEARV,EAQU,6DARV;AAqBG,O;AAbO,K;;;;;sEAahBA,S,EAAS;cA9BrB,sDA8BqB;eA9BZ;AACPC,sBAAY,EAAE,CACX,2DADW,EAEX,mEAFW,EAGX,+DAHW,EAIX,+EAJW,EAKX,mEALW,EAMX,uFANW,EAOX,iFAPW,EAQX,mEARW,CADP;AAWPV,iBAAO,EAAE,CACN,uEADM,EAEN,oEAFM,EAGN,0DAHM,EAIN,qEAJM,EAKN,wDAAaD,OAAb,EALM,EAMN,4FANM,EAON,yEAAiBA,OAAjB,EAPM,EAQN,8DAAaA,OAAb,CAAqB,kDAArB,CARM,CAXF;AAqBPY,mBAAS,EAAE,CACR,yEADQ,EAER,mEAFQ,EAGR,qFAHQ,CArBJ;AA0BPC,mBAAS,EAAE,CACR,2DADQ;AA1BJ,S;AA8BY,Q;;;;;;;;;;;;;;;;;;ACrDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,S;AACX,yBAAoBX,WAApB,EAAsDY,MAAtD,EAA8EC,QAA9E,EAAuG;AAAA;;AAAnF,aAAAb,WAAA,GAAAA,WAAA;AAAkC,aAAAY,MAAA,GAAAA,MAAA;AAAwB,aAAAC,QAAA,GAAAA,QAAA;AAA6B;;;;sCAChG;AACT,cAAI,KAAKb,WAAL,CAAiBc,QAAjB,EAAJ,EAAgC;AAC9B,mBAAO,IAAP;AACD;;AACD,eAAKD,QAAL,CAAcE,KAAd,CAAoB,sBAApB;AACA,eAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBATUL,S,EAAS,0H,EAAA,8G,EAAA,kI;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVM,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AACE;;AAAI;;AAAO;;AACX;;AAAgB;;AAAoB;;AACpC;;AACE;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAQ;;AAC5E;;AACF;;;;;;;;AAEA;;AACE;;AACE;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAC9D;;AACF;;AACF;;;;QDRWC,a;AAGX,+BAAc;AAAA;;AAFhB,aAAAC,YAAA,GAAe,KAAf;AAEmB;;;;mCAEN,CACV;;;yCAEa;AACZ,eAAKA,YAAL,GAAoB,IAApB;AACD;;;2CACkBA,Y,EAAqB;AACtC,eAAKA,YAAL,GAAoBA,YAApB;AACD;;;;;;;uBAbUD,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,mU;AAAA;AAAA;ACP1B;;AACE;;AAQA;;AAOF;;;;AAfO;;AAAA;;AAQA;;AAAA;;;;;;;;;sEDFMA,a,EAAa;cALzB,uDAKyB;eALf;AACT1B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACII;;AACE;;AACE;;AAA+C;;AAAI;;AACrD;;AACA;;AACE;;AAA6B;;AAAO;;AACtC;;AACA;;AACE;;AACG;;AAAM;;AAEX;;AACF;;;;AAVwB;;AAAA;;;;;;;;AAgBtB;;AACE;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AAA8B;;AAAM;;AAEzC;;;;;;AARF;;AACE;;AACE;;;;AACF;;AACA;;AAKF;;;;;;AAPI;;AAAA;;;;;;;;AASJ;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AAQA;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AAQA;;AAKE;;AACF;;AACF;;;;;;;;AAjBI;;AAAA;;AAQA;;AAAA;;AAGA;;AAAA;;;;;;;;QD1CK0B,Y;AAGX,4BACUpB,WADV,EAEUa,QAFV,EAGUD,MAHV,EAGwB;AAAA;;AAFd,aAAAZ,WAAA,GAAAA,WAAA;AACA,aAAAa,QAAA,GAAAA,QAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AALV,aAAAS,KAAA,GAAa,EAAb;AAMI;;;;mCAEO,CAAE;;;gCAEL;AAAA;;AACN,eAAKrB,WAAL,CAAiBsB,KAAjB,CAAuB,KAAKD,KAA5B,EAAmC3C,SAAnC,CACE,UAACC,GAAD,EAAS;AACP,kBAAI,CAACkC,QAAL,CAAcjC,OAAd,CAAsB,yBAAtB;AACD,WAHH,EAIE,UAACC,GAAD,EAAS;AACP,kBAAI,CAACgC,QAAL,CAAcE,KAAd,CAAoBlC,GAApB;AACD,WANH,EAOE,YAAM;AACJ,kBAAI,CAAC+B,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,WATH;AAWD;;;mCACU;AACT,iBAAO,KAAKhB,WAAL,CAAiBc,QAAjB,EAAP;AACD;;;iCACQ;AACPX,sBAAY,CAACoB,UAAb,CAAwB,OAAxB;AACA,eAAKV,QAAL,CAAcW,OAAd,CAAsB,YAAtB;AACA,eAAKZ,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBA/BUI,Y,EAAY,mI,EAAA,2I,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,2sC;AAAA;AAAA;ACVzB;;AACE;;AACE;;AAAkD;;AAAO;;AAEzD;;AAcA;;AAWA;;AA8BF;;AACF;;;;AA1D4B;;AAAA;;AAEpB;;AAAA;;AAcC;;AAAA;;AAYH;;AAAA;;;;;;;;;;sEDpBOA,Y,EAAY;cALxB,uDAKwB;eALd;AACT5B,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBM;;AAAgE;;AAAa;;;;;;AAA/B;;AAAkB;;AAAA;;;;QDNzD+B,mB;AAIX,mCAAmBC,WAAnB,EACUC,eADV,EAEWd,QAFX,EAEsC;AAAA;;AAFnB,aAAAa,WAAA,GAAAA,WAAA;AACT,aAAAC,eAAA,GAAAA,eAAA;AACC,aAAAd,QAAA,GAAAA,QAAA;AAA8B;;;;mCAE9B;AACT,eAAK5C,SAAL;AACA,eAAK2D,aAAL;AACD;;;mCACUzD,I,EAAc;AACvBW,iBAAO,CAACC,GAAR,CAAY,KAAK8C,aAAjB;AACA,eAAKH,WAAL,CAAiBI,QAAjB,CAA0BC,UAA1B,GAAuC,CAAC,KAAKF,aAA7C;;AACA,cAAI,KAAKH,WAAL,CAAiBI,QAAjB,CAA0BzD,EAA1B,KAAiC,CAArC,EAAwC;AACtC,iBAAKE,YAAL,CAAkBJ,IAAlB;AACD,WAFD,MAEO;AACL,iBAAK6D,YAAL,CAAkB7D,IAAlB;AACD;AACF;;;qCAEYA,I,EAAc;AAAA;;AACzB,eAAKuD,WAAL,CAAiBO,QAAjB,GAA4BvD,SAA5B,CACE,UAACC,GAAD,EAAS;AACP,kBAAI,CAACV,SAAL,CAAeE,IAAf;;AACA,kBAAI,CAAC0C,QAAL,CAAcjC,OAAd,CACE,wBADF;;AAGA,kBAAI,CAAC8C,WAAL,CAAiBxD,WAAjB;AACD,WAPH,EAQE,UAACW,GAAD,EAAS;AACP,kBAAI,CAACgC,QAAL,CAAcE,KAAd,CAAoBlC,GAApB;AACD,WAVH;AAYD;;;qCACYV,I,EAAc;AAAA;;AACzB,eAAKuD,WAAL,CAAiBQ,OAAjB,GAA2BxD,SAA3B,CACE,UAACC,GAAD,EAAS;AACP,kBAAI,CAACV,SAAL,CAAeE,IAAf;;AACA,kBAAI,CAAC0C,QAAL,CAAcjC,OAAd,CACE,wBADF;;AAGA,kBAAI,CAAC8C,WAAL,CAAiBxD,WAAjB;AACD,WAPH,EAQE,UAACW,GAAD,EAAS;AACP,kBAAI,CAACgC,QAAL,CAAcE,KAAd,CAAoBlC,GAApB;AACD,WAVH;AAYD;;;kCACSV,I,EAAe;AACvB,cAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBA,gBAAI,CAACF,SAAL;AACD;;AACD,eAAKyD,WAAL,CAAiBI,QAAjB,GAA4B;AAC1BzD,cAAE,EAAE,CADsB;AAE1BC,gBAAI,EAAE,EAFoB;AAG1B6D,uBAAW,EAAE,EAHa;AAI1BJ,sBAAU,EAAE;AAJc,WAA5B;AAMD;;;wCACY;AAAA;;AACX,eAAKJ,eAAL,CAAqBS,MAArB,GAA8BC,SAA9B,GAA0C/E,IAA1C,CAA+C,UAAAqB,GAAG;AAAA,mBAAI,MAAI,CAAC2D,gBAAL,GAAwB3D,GAA5B;AAAA,WAAlD;AACD;;;;;;;uBA/DU8C,mB,EAAmB,mI,EAAA,2I,EAAA,2I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,utB;AAAA;AAAA;;;ACZhC;;AAA4C;AAAA;;AAAA;;AAAA,mBAAY,IAAAc,UAAA,KAAZ;AAAgC,WAAhC;;AAC1C;;AACA;;AACA;;AACI;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AACJ;;AACA;;AACE;;AACI;;AACA;AAAA;AAAA;;AADA;;AAEJ;;AACJ;;AACA;;AACE;;AACE;;AAA0B;AAAA;AAAA;;AACxB;;AACF;;AAAW;;AACf;;AACE;;AACA;;AAA6F;;AAAgC;;AAAM;;AACnI;;AACF;;AACA;;;;;;AAvBiC;;AAAA;;AAIvB;;AAAA;;AAMF;;AAAA;;AAKsB;;AAAA;;AAChB;;AAAA;;AAIqC;;AAAA;;;;;;;;;sEDVtCd,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTjC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYE;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAe;;AAChD;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAmB;;AACpD;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAsB;;AACvD;;AACE;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAC5E;;AACF;;;;;;AANmC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDLxB8C,iB;AAEX,iCAAmBd,WAAnB,EAAqDb,QAArD,EAAgF;AAAA;;AAA7D,aAAAa,WAAA,GAAAA,WAAA;AAAkC,aAAAb,QAAA,GAAAA,QAAA;AAA8B;;;;mCAExE;AACT,eAAKa,WAAL,CAAiBxD,WAAjB,CAA6B,KAAKuE,WAAlC;AACD;;;qCAEYrD,I,EAAY;AACvB,eAAKsC,WAAL,CAAiBI,QAAjB,GAA4BzC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,CAA5B;AACD;;;iCACQf,E,EAAY;AAAA;;AACnB,cAAIY,OAAO,CAAC,qCAAD,CAAX,EAAoD;AAClD,iBAAKyC,WAAL,CAAiBgB,UAAjB,CAA4BrE,EAA5B,EAAgCK,SAAhC,CACE,UAACC,GAAD,EAAS;AACP,oBAAI,CAACkC,QAAL,CAAc1B,OAAd,CACE,sBADF;;AAGA,oBAAI,CAACuC,WAAL,CAAiBxD,WAAjB,CAA6B,MAAI,CAACuE,WAAlC;AACD,aANH,EAOE,UAAC5D,GAAD,EAAS;AACR,oBAAI,CAACgC,QAAL,CAAcE,KAAd,CAAoBlC,GAApB;AACA,aATH;AAWD;AACF;;;uCACW;AACd,eAAK6C,WAAL,CAAiBxD,WAAjB,CAA6B,KAAKuE,WAAlC;AACG;;;;;;;uBA5BUD,iB,EAAiB,mI,EAAA,2I;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,md;AAAA;AAAA;ACV9B;;AAAM;AAAA,mBAAY,IAAAG,YAAA,EAAZ;AAA0B,WAA1B;;AACJ;;AACA;;AACE;;AACA;AAAA;AAAA;;AADA;;AAEF;;AACA;;AACE;;AAA+D;;AAAgC;;AAAM;;AACrG;;AACF;;AACF;;AACA;;AACE;;AAQF;;;;AAhBI;;AAAA;;AAQE;;AAAA;;;;;;;;;sEDFOH,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThD,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakD,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,8G;AAAA;AAAA;ACP1B;;AACE;;AACI;;AACJ;;AACA;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACF;;;;;;;;;sEDNaA,a,EAAa;cALzB,uDAKyB;eALf;AACTpD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASamD,iB;AAIX,iCAAoB7C,WAApB,EAAsDa,QAAtD,EAAiF;AAAA;;AAA7D,aAAAb,WAAA,GAAAA,WAAA;AAAkC,aAAAa,QAAA,GAAAA,QAAA;AAH9C,aAAAiC,cAAA,GAAiB,IAAI,0DAAJ,EAAjB;AACV,aAAAzB,KAAA,GAAa,EAAb;AAEsF;;;;mCAEzE,CACV;;;mCAEO;AAAA;;AACP,eAAKrB,WAAL,CAAiB+C,QAAjB,CAA0B,KAAK1B,KAA/B,EAAsC3C,SAAtC,CAAgD,YAAM;AACpD,kBAAI,CAACmC,QAAL,CAAcjC,OAAd,CAAsB,2BAAtB;AACD,WAFD,EAGA,UAAAC,GAAG,EAAI;AACL,kBAAI,CAACgC,QAAL,CAAcE,KAAd,CAAoBlC,GAApB;AACD,WALD;AAMA;;;iCACK;AACJ,eAAKiE,cAAL,CAAoBE,IAApB,CAAyB,KAAzB;AACD;;;;;;;uBAnBUH,iB,EAAiB,mI,EAAA,2I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,6xB;AAAA;AAAA;ACT9B;;AAA6B;AAAA,mBAAY,IAAAE,QAAA,EAAZ;AAAsB,WAAtB;;AAC3B;;AAAqC;;AAAO;;AAC5C;;AAEA;;AACE;;AAAkE;AAAA;AAAA;;AAAlE;;AACF;;AACA;;AACE;;AAAiE;AAAA;AAAA;;AAAjE;;AACF;;AAEA;;AACE;;AAAiE;AAAA;AAAA;;AAAjE;;AACF;;AAEA;;AACE;;AAAqE;AAAA;AAAA;;AAArE;;AACF;;AAEA;;AACE;;AAAgF;;AAAQ;;AACxF;;AAA8C;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAAoB;;AAAM;;AAC1E;;AAEF;;;;;;AAnBsE;;AAAA;;AAGD;;AAAA;;AAIA;;AAAA;;AAII;;AAAA;;AAIvB;;AAAA;;;;;;;;;sEDXrCJ,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTrD,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;gBAC7B;;;;;;;;;;;;;;;;;;;;AETD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOO,QAAMwD,SAAS,GAAW,CAC7B;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE;AAAtB,KAD6B,EAE7B;AACID,UAAI,EAAE,EADV;AAEIE,2BAAqB,EAAE,QAF3B;AAGIC,iBAAW,EAAE,CAAC,4DAAD,CAHjB;AAIIC,cAAQ,EAAE,CACN;AAACJ,YAAI,EAAE,MAAP;AAAeC,iBAAS,EAAE,kEAA1B;AAAyCE,mBAAW,EAAE,CAAC,4DAAD;AAAtD,OADM,EAEN;AAACH,YAAI,EAAE,cAAP;AAAuBC,iBAAS,EAAE,sFAAlC;AAAuDE,mBAAW,EAAE,CAAC,4DAAD;AAApE,OAFM,EAGN;AAACH,YAAI,EAAE,WAAP;AAAoBC,iBAAS,EAAE,gFAA/B;AAAkDE,mBAAW,EAAE,CAAC,4DAAD;AAA/D,OAHM,EAIN;AAACH,YAAI,EAAE,MAAP;AAAeC,iBAAS,EAAE,kEAA1B;AAAyCE,mBAAW,EAAE,CAAC,4DAAD;AAAtD,OAJM;AAJd,KAF6B,EAe7B;AAACH,UAAI,EAAE,IAAP;AAAaK,gBAAU,EAAE,EAAzB;AAA6BC,eAAS,EAAE;AAAxC,KAf6B,CAA1B;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,W;AAIX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAAvF,QAAA,GAAiB,EAAjB;AAGwC;;;;mCAE7B;AACT,iBAAO,KAAKuF,IAAL,CAAUC,IAAV,CAAe,gCAAgC,MAA/C,EAAuD,KAAKxF,QAA5D,CAAP;AACD;;;kCACS;AACR,iBAAO,KAAKuF,IAAL,CAAUE,GAAV,CAAc,gCAAgC,OAAhC,GAA0C,KAAKzF,QAAL,CAAcC,EAAtE,EAA0E,KAAKD,QAA/E,CAAP;AACD;;;mCACUP,E,EAAY;AACrB,iBAAO,KAAK8F,IAAL,WAAiB,gCAAgC,OAAhC,GAA0C9F,EAA3D,CAAP;AACD;;;sCACU;AAAA;;AACT,iBAAO,KAAK8F,IAAL,CAAUG,GAAV,CAAc,gCAAgC,MAA9C,EACNzB,SADM,GAEN/E,IAFM,CAED,UAAAqB,GAAG;AAAA,mBAAK,OAAI,CAACoF,IAAL,GAAYpF,GAAjB;AAAA,WAFF,CAAP;AAGD;;;;;;;uBAnBU+E,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVzC,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAMa+C,e;AACX,iCAAc;AAAA;AAAE;;;;gCAERxC,O,EAAiByC,U,EAAuB;AAC9C,6DAAiBzC,OAAjB,EAA0B,UAACjE,CAAD,EAAY;AACpC,gBAAIA,CAAJ,EAAO;AACL0G,wBAAU;AACX;AACF,WAJD;AAKD;;;gCACOzC,O,EAAiB;AACvB,6DAAiBA,OAAjB;AACD;;;8BACKA,O,EAAiB;AACrB,2DAAeA,OAAf;AACD;;;gCACOA,O,EAAiB;AACvB,6DAAiBA,OAAjB;AACD;;;gCACOA,Q,EAAiB;AACvB,6DAAiBA,QAAjB;AACD;;;;;;;uBArBUwC,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV/C,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiD,W;AAIX,2BAAoBP,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAA1D,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAGwC;;;;8BAElCoB,K,EAAY;AAAA;;AAChB,iBAAO,KAAKsC,IAAL,CAAUC,IAAV,CAAe,uCAAf,EAAwDvC,KAAxD,EAA+D8C,IAA/D,CACL,2DAAI,UAACC,QAAD,EAAmB;AACrB,gBAAMC,IAAI,GAAGD,QAAb;;AACA,gBAAIC,IAAJ,EAAU;AACRlE,0BAAY,CAACmE,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACnE,KAAnC;AACA,qBAAI,CAACG,YAAL,GAAoB,OAAI,CAACJ,SAAL,CAAeK,WAAf,CAA2B+D,IAAI,CAACnE,KAAhC,CAApB;AACApB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACsB,YAAjB;AACD;AACF,WAPD,CADK,CAAP;AAUD;;;iCACQgB,K,EAAU;AACjB,iBAAO,KAAKsC,IAAL,CAAUC,IAAV,CAAe,0CAAf,EAA2DvC,KAA3D,CAAP;AACD;;;mCAEO;AACN,cAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,iBAAO,CAAC,KAAKH,SAAL,CAAesE,cAAf,CAA8BrE,KAA9B,CAAR;AACD;;;;;;;uBAzBUgE,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVjD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMauD,e;AAEb,+BAAoBb,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;iCAEnC;AACJ,iBAAO,KAAKA,IAAL,CAAUG,GAAV,CAAc,qCAAd,CAAP;AACD;;;;;;;uBANYU,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVvD,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawD,gB;;;;;;;kCAETtH,G,EACAuH,I,EAAgD;AAEhD,iBAAOA,IAAI,CAACC,MAAL,CAAYxH,GAAZ,EAAiBgH,IAAjB,CACH,kEAAY,UAAApD,KAAK,EAAI;AACb,gBAAIA,KAAK,CAAC6D,MAAN,KAAiB,GAArB,EAAyB;AACrB,qBAAO,wDAAW7D,KAAK,CAAC8D,UAAjB,CAAP;AACH;;AAED,gBAAI9D,KAAK,YAAY,sEAArB,EAAuC;AACnC,kBAAM+D,gBAAgB,GAAG/D,KAAK,CAACgE,OAAN,CAAcjB,GAAd,CAAkB,mBAAlB,CAAzB;;AACA,kBAAGgB,gBAAH,EAAoB;AAChB,uBAAO,wDAAWA,gBAAX,CAAP;AACH;;AACD,kBAAME,WAAW,GAAGjE,KAAK,CAACA,KAA1B;AACA,kBAAIkE,gBAAgB,GAAG,EAAvB;;AAEA,kBAAID,WAAW,CAACE,MAAZ,IAAsB,OAAOF,WAAW,CAACE,MAAnB,KAA8B,QAAxD,EAAiE;AAC7D,qBAAK,IAAMC,GAAX,IAAkBH,WAAW,CAACE,MAA9B,EAAqC;AACjC,sBAAIF,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,CAAJ,EAA4B;AACxBF,oCAAgB,IAAID,WAAW,CAACE,MAAZ,CAAmBC,GAAnB,IAA0B,IAA9C;AACH;AACJ;AACJ;;AACD,qBAAO,wDAAWF,gBAAgB,IAAID,WAApB,IAAmC,cAA9C,CAAP;AACH;AACR,WAtBD,CADG,CAAP;AAyBD;;;;;;;uBA9BUP,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;AAiCtB,QAAMW,wBAAwB,GAAG;AACpCC,aAAO,EAAE,sEAD2B;AAEpCC,cAAQ,EAAEb,gBAF0B;AAGpCc,WAAK,EAAE;AAH6B,KAAjC;;;;;;;;;;;;;;;;AC3CP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,W;AAIb,2BAAoB7B,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAA7B,QAAA,GAAiB,EAAjB;AAGyC;;;;mCAE9B;AACT,iBAAO,KAAK6B,IAAL,CAAUC,IAAV,CAAe,gCAAgC,MAA/C,EAAuD,KAAK9B,QAA5D,CAAP;AACD;;;kCACS;AACR,iBAAO,KAAK6B,IAAL,CAAUE,GAAV,CAAc,gCAAgC,OAAhC,GAA0C,KAAK/B,QAAL,CAAczD,EAAtE,EAA0E,KAAKyD,QAA/E,CAAP;AACD;;;mCACUjE,E,EAAY;AACrB,iBAAO,KAAK8F,IAAL,WAAiB,gCAAgC,OAAhC,GAA0C9F,EAA3D,CAAP;AACD;;;oCACW4E,W,EAAoB;AAAA;;AAC9B,iBAAO,KAAKkB,IAAL,CAAUG,GAAV,CAAc,gCAAgC,OAAhC,GAA0CrB,WAAxD,EACNJ,SADM,GAEN/E,IAFM,CAED,UAAAqB,GAAG;AAAA,mBAAK,OAAI,CAAC8G,UAAL,GAAkB9G,GAAvB;AAAA,WAFF,CAAP;AAGD;;;;;;;uBAnBY6G,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVvE,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA/G,GAAG;AAAA,aAAIC,OAAO,CAACiC,KAAR,CAAclC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { TestService } from 'src/app/services/Test.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Test } from 'src/shared/Test';\n\n@Component({\n  selector: 'app-Test',\n  templateUrl: './Test.component.html',\n  styleUrls: []\n})\nexport class TestComponent implements OnInit {\n\n  constructor(public service: TestService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.service.refreshList();\n  }\n\n  resetForm(form?: NgForm){\n    if (this.service.formData.Id != null){\n      form.resetForm();\n    }\n    this.service.formData = {\n        Id: 0,\n        Name: ''\n      };\n  }\n\n  onSubmit(form: NgForm){\n    if (this.service.formData.Id === 0){\n      this.insertRecord(form);\n    }\n    else{\n      this.updateForm(form);\n    }\n  }\n  insertRecord(form: NgForm){\n    this.service.postTest().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.success('Test added', 'Test head');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  updateForm(form: NgForm){\n    this.service.putTest().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.success('Test update', 'Test head');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  onDelete(id){\n    if (confirm('Are you sure to delete this record?')){\n      this.service.deleteTest(id)\n      .subscribe(res => {\n        this.service.refreshList();\n        this.toastr.warning('Deleted item', 'Header');\n      });\n    }\n  }\n  populateForm(item: Test){\nthis.service.formData = Object.assign({}, item);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-9\">\n    <form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n      <input type=\"hidden\" name=\"Id\" [(ngModel)]=\"service.formData.Id\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-5\">\n          <input  class=\"form-control\" name=\"Name\" #Name=\"ngModel\" [(ngModel)]=\"service.formData.Name\" \n          required maxlength=\"10\" placeholder=\"Test placeholder\">\n        </div>\n        <div class=\"form-group col-md-5\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <div class=\"col-md-5\">\n    <br><br>\n    <table class=\"table table-hover\">\n      <tr *ngFor=\"let item of service.list\">\n        <td (click)=\"populateForm(item)\">{{item.Name}}</td>\n        <td (click)=\"onDelete(item.Id)\">Delete</td>\n      </tr>\n    </table>\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\nexport class AppComponent implements OnInit{\njwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n    const token = localStorage.getItem('token');\n    if (token){\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestService } from 'src/app/services/Test.service';\nimport {  FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './services/auth.service';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { TestComponent } from './Test/Test.component';\nimport { NewsComponent } from './news/news.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      TestComponent,\n      NavComponent,\n      RegisterComponent,\n      HomeComponent,\n      NewsDetailComponent,\n      NewsListComponent,\n      NewsComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      HttpClientModule,\n      ToastrModule.forRoot(),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      RouterModule.forRoot(appRoutes)\n   ],\n   providers: [\n      TestService,\n      AuthService,\n      ErrorInterceptorProvider\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService){ }\n  canActivate(): boolean {\n    if (this.authService.loggedIn()){\n      return true;\n    }\n    this.alertify.error('You shall not pass!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n  cancelRegisterMode(registerMode: boolean){\n    this.registerMode = registerMode;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Sign up</h1>\n    <p class=\"lead\">It’s quick and easy.</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg\" (click)=\"registerToggle()\">Register</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(\n    public  authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      (res) => {\n        this.alertify.success('Logged in successfully.');\n      },\n      (err) => {\n        this.alertify.error(err);\n      },\n      () => {\n        this.router.navigate(['/news']);\n      }\n    );\n  }\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    this.alertify.message('Logged out');\n    this.router.navigate(['/home']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\" >Angular</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/test']\"  >Test</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Test 2 </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\"\n          >Test 3</a\n        >\n      </li>\n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n        Welcome {{ authService.decodedToken?.unique_name | titlecase }}\n      </a>\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" href=\"#\" (click)=\"logOut()\"\n          ><i class=\"fa fa-sign-out\"></i>Logout</a\n        >\n      </div>\n    </div>\n\n    <form\n      *ngIf=\"!loggedIn()\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline my-2 my-lg-0\"\n      (ngSubmit)=\"login()\"\n    >\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"Username\"\n        required\n        [(ngModel)]=\"model.username\"\n      />\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n      />\n      <button\n        [disabled]=\"loginForm.invalid\"\n        class=\"btn btn-success my-2 my-sm-0\"\n        type=\"submit\"\n      >\n        Login\n      </button>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\nlistofCategories: any[];\nselectedValue: any;\n\n  constructor(public newsService: NewsService,\n    private categoryService: CategoryService,\n     private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.getCategories();\n  }\n  SubmitNews(form: NgForm) {\n    console.log(this.selectedValue);\n    this.newsService.newsData.CategoryId = +this.selectedValue;\n    if (this.newsService.newsData.Id === 0) {\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n  }\n\n  insertRecord(form: NgForm) {\n    this.newsService.postNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success(\n          'Submitted successfully'\n        );\n        this.newsService.refreshList();\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n  updateRecord(form: NgForm) {\n    this.newsService.putNews().subscribe(\n      (res) => {\n        this.resetForm(form);\n        this.alertify.success(\n          'Submitted successfully'\n        );\n        this.newsService.refreshList();\n      },\n      (err) => {\n        this.alertify.error(err);\n      }\n    );\n  }\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.newsService.newsData = {\n      Id: 0,\n      Name: '',\n      Description: '',\n      CategoryId: 0,\n    };\n  }\n  getCategories(){\n    this.categoryService.getAll().toPromise().then(res => this.listofCategories = res as Category[]);\n  }\n}\n","<form #newsForm=\"ngForm\" autocomplete=\"off\" (ngSubmit)=\"SubmitNews(newsForm)\" >\n  <div class=\"container-form col-md-10\">\n  <input type=\"hidden\" name=\"Id\" [value]=\"newsService.newsData.Id\">\n  <div class=\"form-group\">\n      <div class=\"input-group\">\n          <input id=\"Name\" name=\"Name\" #Name=\"ngModel\" \n          [(ngModel)]=\"newsService.newsData.Name\" required class=\"form-control\" placeholder=\"Name\">\n      </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n        <input id=\"Description\" name=\"Description\" #Description=\"ngModel\" \n        [(ngModel)]=\"newsService.newsData.Description\" required class=\"form-control\" placeholder=\"Description\">\n    </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"input-group\">\n    <select name=\"Categories\" [(ngModel)]=\"selectedValue\">\n      <option *ngFor=\"let item of listofCategories\" [value]=\"item.Id\">{{item.Name}}</option>\n    </select>  </div>\n</div>\n  <div class=\"form-group\">\n  <button class=\"btn btn-success btn-lg btn-block\" [disabled]=\"newsForm.invalid\" type=\"submit\"><i class=\"fas fa-database\"></i> Submit</button>\n  </div>\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { AlertifyService } from '../services/alertify.service';\nimport { News } from '../models/news';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.css']\n})\nexport class NewsListComponent implements OnInit {\n  searchQuery: string;\n  constructor(public newsService: NewsService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.newsService.refreshList(this.searchQuery);\n  }\n\n  populateForm(item: News) {\n    this.newsService.newsData = Object.assign({}, item);\n  }\n  onDelete(Id: number) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.newsService.deleteNews(Id).subscribe(\n        (res) => {\n          this.alertify.warning(\n            'Deleted successfully'\n          );\n          this.newsService.refreshList(this.searchQuery);\n        },\n        (err) => {\n         this.alertify.error(err);\n        }\n      );\n    }\n  }\n  searchMethod(){\nthis.newsService.refreshList(this.searchQuery);\n  }\n}\n","<form (ngSubmit)=\"searchMethod()\" #searchForm=\"ngForm\">\n  <div class=\"form-row\">\n  <div class=\"form-group col-md-8\">\n    <input class=\"form-control\" type=\"text\"  name=\"searchQuery\"\n    [(ngModel)]=\"searchQuery\" placeholder=\"Search\">\n  </div>\n  <div class=\"form-group\">\n    <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\"><i class=\"fas fa-database\"></i> Search</button>\n    </div>\n  </div>\n</form>\n<table class=\"table table-hover\">\n  <tr *ngFor=\"let item of newsService.listOfNews\">\n    <td (click)=\"populateForm(item)\">{{ item.Name }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Category }}</td>\n    <td (click)=\"populateForm(item)\">{{ item.Description }}</td>\n    <td >\n      <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete(item.Id)\"></i>\n    </td>\n  </tr>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbtron\">\n  <h1 class=\"display-4 text-center\">\n      News Detail Register\n  </h1>\n  <hr>\n  <div class=\"row\">\n      <div class=\"col-md-5\">\n          <app-news-detail></app-news-detail>\n      </div>\n      <div class=\"col-md-7\">\n          <app-news-list></app-news-list>\n      </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n@Output() cancelRegister = new EventEmitter();\nmodel: any = {};\n\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  register(){\n   this.authService.register(this.model).subscribe(() => {\n     this.alertify.success('successfully registration');\n   },\n   err => {\n     this.alertify.error(err);\n   });\n  }\n  cancel(){\n    this.cancelRegister.emit(false);\n  }\n}\n","<form #registerForm=\"ngForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"firstName\" [(ngModel)]=\"model.firstName\" placeholder=\"First Name\">\n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"lastName\" [(ngModel)]=\"model.lastName\" placeholder=\"Last Name\">\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" required name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\">\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\">\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\" >Cancel</button>\n  </div>\n  \n</form>","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\r\nimport { NewsListComponent } from './news-list/news-list.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { TestComponent } from './Test/Test.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'test', component: TestComponent, canActivate: [AuthGuard]},\r\n            {path: 'news-details', component: NewsDetailComponent, canActivate: [AuthGuard]},\r\n            {path: 'news-list', component: NewsListComponent, canActivate: [AuthGuard]},\r\n            {path: 'news', component: NewsComponent, canActivate: [AuthGuard]}\r\n\r\n\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];","import { Injectable } from '@angular/core';\nimport { Test } from '../../shared/Test';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TestService {\n  formData: Test = {} as Test;\n  list: Test[];\n\n  constructor(private http: HttpClient) {}\n\n  postTest() {\n    return this.http.post('http://localhost:61364/api/' + 'Test', this.formData);\n  }\n  putTest() {\n    return this.http.put('http://localhost:61364/api/' + 'Test/' + this.formData.Id, this.formData);\n  }\n  deleteTest(id: number) {\n    return this.http.delete('http://localhost:61364/api/' + 'Test/' + id);\n  }\n  refreshList(){\n    return this.http.get('http://localhost:61364/api/' + 'Test')\n    .toPromise()\n    .then(res =>  this.list = res as Test[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, (e: any) => {\n      if (e) {\n        okCallBack();\n      }\n    });\n  }\n  success(message: string) {\n    alertify.success(message);\n  }\n  error(message: string) {\n    alertify.error(message);\n  }\n  warning(message: string) {\n    alertify.warning(message);\n  }\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post('http://localhost:61364/api/auth/login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          console.log(this.decodedToken);\n        }\n      })\n    );\n  }\n  register(model: any){\n    return this.http.post('http://localhost:61364/api/auth/register', model);\n  }\n\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\nconstructor(private http: HttpClient) { }\n\ngetAll(){\n  return this.http.get('http://localhost:61364/api/category');\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport {  throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler\r\n  ): import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError (error => {\r\n                if (error.status === 401){\r\n                    return throwError(error.statusText);\r\n                }\r\n\r\n                if (error instanceof HttpErrorResponse){\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if(applicationError){\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n\r\n                    if (serverError.errors && typeof serverError.errors === 'object'){\r\n                        for (const key in serverError.errors){\r\n                            if (serverError.errors[key]){\r\n                                modalStateErrors += serverError.errors[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n        })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { News } from '../models/news';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\nnewsData: News = {} as News;\nlistOfNews: News[];\n\nconstructor(private http: HttpClient) { }\n\npostNews() {\n  return this.http.post('http://localhost:61364/api/' + 'News', this.newsData);\n}\nputNews() {\n  return this.http.put('http://localhost:61364/api/' + 'News/' + this.newsData.Id, this.newsData);\n}\ndeleteNews(id: number) {\n  return this.http.delete('http://localhost:61364/api/' + 'News/' + id);\n}\nrefreshList(searchQuery?: string){\n  return this.http.get('http://localhost:61364/api/' + 'News/' + searchQuery)\n  .toPromise()\n  .then(res =>  this.listOfNews = res as News[]);\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}